{"version":3,"file":"static/js/948.7638dc5f.chunk.js","mappings":"6NACA,GAAgB,SAAW,4BAA4B,UAAY,6BAA6B,UAAY,6BAA6B,aAAe,gCAAgC,UAAY,6BAA6B,YAAc,gCCA/O,EAA8B,4BAA9B,EAAyE,6BAAzE,EAAoH,4B,SCcpH,MAVA,WACE,OACEA,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBC,I,stYAAaC,IAAI,YAClDJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAkBC,I,i3TAAcC,IAAI,aACpDJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,MAGtB,ECsEA,MA1EA,WACE,IAAAG,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA0BL,EAAAA,EAAAA,UAAS,QAAOM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,IAEtBG,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAmBC,aAAaC,QAAQ,eACxCC,EAAaF,aAAaC,QAAQ,SAEf,OAArBF,GACFN,EAAoC,SAArBM,GAGE,OAAfG,GACFL,EAASM,OAAOD,GAEpB,GAAG,KAEHJ,EAAAA,EAAAA,YAAU,WAERE,aAAaI,QAAQ,cAAeZ,EAAYa,YAChDL,aAAaI,QAAQ,QAASR,EAAMS,WACtC,GAAG,CAACb,EAAaI,IAEjB,IASMU,EAAiBV,EAAMW,eAAe,SAE5C,OACExB,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAIuB,SAAS1B,UAC1BF,EAAAA,EAAAA,MAAA,MAAII,UAAWC,EAAIwB,UAAU3B,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAIyB,UAAWxB,I,y+BAAWC,IAAI,UAC9CJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAI0B,aAAczB,IAAK0B,EAASzB,IAAI,aACpDJ,EAAAA,EAAAA,KAAC8B,EAAM,KACPjC,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAI6B,UAAUhC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,KACEC,UAAWC,EAAI8B,YACfC,MAAO,CAAEC,WAAY,yBAA0BC,aAAc,IAAKpC,SACnE,gBAGDF,EAAAA,EAAAA,MAAA,KACEI,UAAWC,EAAIkC,eACfH,MAAO,CACLC,WAAY,yBACZG,UAAW,EACXF,aAAc,IACdpC,SAAA,CAEDwB,EAAe,oBAGpBvB,EAAAA,EAAAA,KAAA,UACEsC,GAAG,eACHrC,UAAS,iBAAAsC,OAAmBrC,EAAIsC,YAAW,KAAAD,OACzC9B,EAAc,YAAc,IAE9BwB,MAAO,CAAEQ,gBAAiBhC,EAAc,UAAY,WACpDiC,QAzCa,WAEjB5B,EADEL,EACOI,EAAQ,EAERA,EAAQ,GAEnBH,GAAgBD,EAClB,EAkC8BV,SAErBU,EAAc,YAAc,eAKvC,EChFA,GAAiB,ECcjB,MARA,WACE,OACET,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAIyC,UAAU5C,UAC5BC,EAAAA,EAAAA,KAAC4C,EAAS,KAGhB,C","sources":["webpack://tweets/./src/components/TweetCard/TweetCard.module.css?b888","webpack://tweets/./src/components/Avatar/Avatar.module.css?74bd","components/Avatar/Avatar.jsx","components/TweetCard/TweetCard.jsx","pages/TweetsPage/TweetsPage.module.css","pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardList\":\"TweetCard_cardList__iMGd6\",\"cardStyle\":\"TweetCard_cardStyle__bcUAQ\",\"logoStyle\":\"TweetCard_logoStyle__7o5qY\",\"squaresStyle\":\"TweetCard_squaresStyle__kR34a\",\"textStyle\":\"TweetCard_textStyle__J9KEK\",\"buttonStyle\":\"TweetCard_buttonStyle__VJ4Jn\"};","// extracted by mini-css-extract-plugin\nexport default {\"avatarStyle\":\"Avatar_avatarStyle__n7sts\",\"ellipseStyle\":\"Avatar_ellipseStyle__b+iO9\",\"stripeStyle\":\"Avatar_stripeStyle__nY3Wg\"};","import React from 'react';\nimport avatar from '../../assets/avatar.jpg';\nimport ellipse from '../../assets/ellipse.png';\nimport css from './Avatar.module.css';\n\nfunction Avatar() {\n  return (\n    <>\n      <img className={css.avatarStyle} src={avatar} alt=\"avatar\" />\n      <img className={css.ellipseStyle} src={ellipse} alt=\"ellipse\" />\n      <div className={css.stripeStyle}></div>\n    </>\n  );\n}\n\nexport default Avatar;\n","import React, { useEffect, useState } from 'react';\nimport logo from '../../assets/logo.png';\nimport squares from '../../assets/squares.png';\n// import avatar from '../../assets/avatar.jpg';\n// import ellipse from '../../assets/ellipse.png';\nimport css from './TweetCard.module.css';\nimport 'typeface-montserrat';\nimport Avatar from '../Avatar/Avatar';\n\nfunction TweetCard() {\n  const [isFollowing, setIsFollowing] = useState(false);\n  const [count, setCount] = useState(100500);\n\n  useEffect(() => {\n    // Перевірка, чи є збережений стан у localStorage\n    const savedIsFollowing = localStorage.getItem('isFollowing');\n    const savedCount = localStorage.getItem('count');\n\n    if (savedIsFollowing !== null) {\n      setIsFollowing(savedIsFollowing === 'true');\n    }\n\n    if (savedCount !== null) {\n      setCount(Number(savedCount));\n    }\n  }, []);\n\n  useEffect(() => {\n    // Збереження стану в localStorage при зміні\n    localStorage.setItem('isFollowing', isFollowing.toString());\n    localStorage.setItem('count', count.toString());\n  }, [isFollowing, count]);\n\n  const toggleFollow = () => {\n    if (isFollowing) {\n      setCount(count - 1);\n    } else {\n      setCount(count + 1);\n    }\n    setIsFollowing(!isFollowing);\n  };\n\n  const formattedCount = count.toLocaleString('en-US');\n\n  return (\n    <ul className={css.cardList}>\n      <li className={css.cardStyle}>\n        <img className={css.logoStyle} src={logo} alt=\"logo\" />\n        <img className={css.squaresStyle} src={squares} alt=\"squares\" />\n        <Avatar />\n        <div className={css.textStyle}>\n          <p\n            className={css.tweetsStyle}\n            style={{ fontFamily: 'Montserrat, sans-serif', marginBottom: 16 }}\n          >\n            777 tweets\n          </p>\n          <p\n            className={css.followersStyle}\n            style={{\n              fontFamily: 'Montserrat, sans-serif',\n              marginTop: 0,\n              marginBottom: 26,\n            }}\n          >\n            {formattedCount} followers\n          </p>\n        </div>\n        <button\n          id=\"followButton\"\n          className={`follow-button ${css.buttonStyle} ${\n            isFollowing ? 'following' : ''\n          }`}\n          style={{ backgroundColor: isFollowing ? '#5CD3A8' : '#EBD8FF' }}\n          onClick={toggleFollow}\n        >\n          {isFollowing ? 'Following' : 'Follow'}\n        </button>\n      </li>\n    </ul>\n  );\n}\n\nexport default TweetCard;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\n\n// import banner from '../../assets/banner.png';\n// import { ReactComponent as Search } from '../../assets/search.svg';\nimport TweetCard from '../../components/TweetCard/TweetCard';\nimport css from './TweetsPage.module.css';\n\nfunction TweetsPage() {\n  return (\n    <div className={css.container}>\n      <TweetCard />\n    </div>\n  );\n}\n\nexport default TweetsPage;\n\n// className={css.posterStyle}\n"],"names":["_jsxs","_Fragment","children","_jsx","className","css","src","alt","_useState","useState","_useState2","_slicedToArray","isFollowing","setIsFollowing","_useState3","_useState4","count","setCount","useEffect","savedIsFollowing","localStorage","getItem","savedCount","Number","setItem","toString","formattedCount","toLocaleString","cardList","cardStyle","logoStyle","squaresStyle","squares","Avatar","textStyle","tweetsStyle","style","fontFamily","marginBottom","followersStyle","marginTop","id","concat","buttonStyle","backgroundColor","onClick","container","TweetCard"],"sourceRoot":""}